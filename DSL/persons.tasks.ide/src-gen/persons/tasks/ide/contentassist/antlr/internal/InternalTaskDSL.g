/*
 * generated by Xtext 2.32.0
 */
grammar InternalTaskDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package persons.tasks.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package persons.tasks.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import persons.tasks.services.TaskDSLGrammarAccess;

}
@parser::members {
	private TaskDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(TaskDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePlanning
entryRulePlanning
:
{ before(grammarAccess.getPlanningRule()); }
	 rulePlanning
{ after(grammarAccess.getPlanningRule()); } 
	 EOF 
;

// Rule Planning
rulePlanning 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlanningAccess().getGroup()); }
		(rule__Planning__Group__0)
		{ after(grammarAccess.getPlanningAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePerson
entryRulePerson
:
{ before(grammarAccess.getPersonRule()); }
	 rulePerson
{ after(grammarAccess.getPersonRule()); } 
	 EOF 
;

// Rule Person
rulePerson 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPersonAccess().getGroup()); }
		(rule__Person__Group__0)
		{ after(grammarAccess.getPersonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getGroup()); }
		(rule__Task__Group__0)
		{ after(grammarAccess.getTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProject
entryRuleProject
:
{ before(grammarAccess.getProjectRule()); }
	 ruleProject
{ after(grammarAccess.getProjectRule()); } 
	 EOF 
;

// Rule Project
ruleProject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectAccess().getNameAssignment()); }
		(rule__Project__NameAssignment)
		{ after(grammarAccess.getProjectAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProjectUse
entryRuleProjectUse
:
{ before(grammarAccess.getProjectUseRule()); }
	 ruleProjectUse
{ after(grammarAccess.getProjectUseRule()); } 
	 EOF 
;

// Rule ProjectUse
ruleProjectUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectUseAccess().getProjectAssignment()); }
		(rule__ProjectUse__ProjectAssignment)
		{ after(grammarAccess.getProjectUseAccess().getProjectAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDuration
entryRuleDuration
:
{ before(grammarAccess.getDurationRule()); }
	 ruleDuration
{ after(grammarAccess.getDurationRule()); } 
	 EOF 
;

// Rule Duration
ruleDuration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDurationAccess().getGroup()); }
		(rule__Duration__Group__0)
		{ after(grammarAccess.getDurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLunchAction
entryRuleLunchAction
:
{ before(grammarAccess.getLunchActionRule()); }
	 ruleLunchAction
{ after(grammarAccess.getLunchActionRule()); } 
	 EOF 
;

// Rule LunchAction
ruleLunchAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLunchActionAccess().getGroup()); }
		(rule__LunchAction__Group__0)
		{ after(grammarAccess.getLunchActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMeetingAction
entryRuleMeetingAction
:
{ before(grammarAccess.getMeetingActionRule()); }
	 ruleMeetingAction
{ after(grammarAccess.getMeetingActionRule()); } 
	 EOF 
;

// Rule MeetingAction
ruleMeetingAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMeetingActionAccess().getGroup()); }
		(rule__MeetingAction__Group__0)
		{ after(grammarAccess.getMeetingActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePaperAction
entryRulePaperAction
:
{ before(grammarAccess.getPaperActionRule()); }
	 rulePaperAction
{ after(grammarAccess.getPaperActionRule()); } 
	 EOF 
;

// Rule PaperAction
rulePaperAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPaperActionAccess().getGroup()); }
		(rule__PaperAction__Group__0)
		{ after(grammarAccess.getPaperActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePaymentAction
entryRulePaymentAction
:
{ before(grammarAccess.getPaymentActionRule()); }
	 rulePaymentAction
{ after(grammarAccess.getPaymentActionRule()); } 
	 EOF 
;

// Rule PaymentAction
rulePaymentAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPaymentActionAccess().getGroup()); }
		(rule__PaymentAction__Group__0)
		{ after(grammarAccess.getPaymentActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntExpression
entryRuleIntExpression
:
{ before(grammarAccess.getIntExpressionRule()); }
	 ruleIntExpression
{ after(grammarAccess.getIntExpressionRule()); } 
	 EOF 
;

// Rule IntExpression
ruleIntExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntExpressionAccess().getExpressionLevel1ParserRuleCall()); }
		ruleExpressionLevel1
		{ after(grammarAccess.getIntExpressionAccess().getExpressionLevel1ParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel1
entryRuleExpressionLevel1
:
{ before(grammarAccess.getExpressionLevel1Rule()); }
	 ruleExpressionLevel1
{ after(grammarAccess.getExpressionLevel1Rule()); } 
	 EOF 
;

// Rule ExpressionLevel1
ruleExpressionLevel1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getGroup()); }
		(rule__ExpressionLevel1__Group__0)
		{ after(grammarAccess.getExpressionLevel1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel2
entryRuleExpressionLevel2
:
{ before(grammarAccess.getExpressionLevel2Rule()); }
	 ruleExpressionLevel2
{ after(grammarAccess.getExpressionLevel2Rule()); } 
	 EOF 
;

// Rule ExpressionLevel2
ruleExpressionLevel2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getGroup()); }
		(rule__ExpressionLevel2__Group__0)
		{ after(grammarAccess.getExpressionLevel2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel3
entryRuleExpressionLevel3
:
{ before(grammarAccess.getExpressionLevel3Rule()); }
	 ruleExpressionLevel3
{ after(grammarAccess.getExpressionLevel3Rule()); } 
	 EOF 
;

// Rule ExpressionLevel3
ruleExpressionLevel3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getGroup()); }
		(rule__ExpressionLevel3__Group__0)
		{ after(grammarAccess.getExpressionLevel3Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel4
entryRuleExpressionLevel4
:
{ before(grammarAccess.getExpressionLevel4Rule()); }
	 ruleExpressionLevel4
{ after(grammarAccess.getExpressionLevel4Rule()); } 
	 EOF 
;

// Rule ExpressionLevel4
ruleExpressionLevel4 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel4Access().getAlternatives()); }
		(rule__ExpressionLevel4__Alternatives)
		{ after(grammarAccess.getExpressionLevel4Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionMinus
entryRuleExpressionMinus
:
{ before(grammarAccess.getExpressionMinusRule()); }
	 ruleExpressionMinus
{ after(grammarAccess.getExpressionMinusRule()); } 
	 EOF 
;

// Rule ExpressionMinus
ruleExpressionMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionMinusAccess().getGroup()); }
		(rule__ExpressionMinus__Group__0)
		{ after(grammarAccess.getExpressionMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionPlus
entryRuleExpressionPlus
:
{ before(grammarAccess.getExpressionPlusRule()); }
	 ruleExpressionPlus
{ after(grammarAccess.getExpressionPlusRule()); } 
	 EOF 
;

// Rule ExpressionPlus
ruleExpressionPlus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionPlusAccess().getGroup()); }
		(rule__ExpressionPlus__Group__0)
		{ after(grammarAccess.getExpressionPlusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel5
entryRuleExpressionLevel5
:
{ before(grammarAccess.getExpressionLevel5Rule()); }
	 ruleExpressionLevel5
{ after(grammarAccess.getExpressionLevel5Rule()); } 
	 EOF 
;

// Rule ExpressionLevel5
ruleExpressionLevel5 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getAlternatives()); }
		(rule__ExpressionLevel5__Alternatives)
		{ after(grammarAccess.getExpressionLevel5Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionBracket
entryRuleExpressionBracket
:
{ before(grammarAccess.getExpressionBracketRule()); }
	 ruleExpressionBracket
{ after(grammarAccess.getExpressionBracketRule()); } 
	 EOF 
;

// Rule ExpressionBracket
ruleExpressionBracket 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionBracketAccess().getGroup()); }
		(rule__ExpressionBracket__Group__0)
		{ after(grammarAccess.getExpressionBracketAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionConstantInt
entryRuleExpressionConstantInt
:
{ before(grammarAccess.getExpressionConstantIntRule()); }
	 ruleExpressionConstantInt
{ after(grammarAccess.getExpressionConstantIntRule()); } 
	 EOF 
;

// Rule ExpressionConstantInt
ruleExpressionConstantInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionConstantIntAccess().getValueAssignment()); }
		(rule__ExpressionConstantInt__ValueAssignment)
		{ after(grammarAccess.getExpressionConstantIntAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionBalance
entryRuleExpressionBalance
:
{ before(grammarAccess.getExpressionBalanceRule()); }
	 ruleExpressionBalance
{ after(grammarAccess.getExpressionBalanceRule()); } 
	 EOF 
;

// Rule ExpressionBalance
ruleExpressionBalance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionBalanceAccess().getValueAssignment()); }
		(rule__ExpressionBalance__ValueAssignment)
		{ after(grammarAccess.getExpressionBalanceAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getBooleanExpressionLevel1ParserRuleCall()); }
		ruleBooleanExpressionLevel1
		{ after(grammarAccess.getBooleanExpressionAccess().getBooleanExpressionLevel1ParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpressionLevel1
entryRuleBooleanExpressionLevel1
:
{ before(grammarAccess.getBooleanExpressionLevel1Rule()); }
	 ruleBooleanExpressionLevel1
{ after(grammarAccess.getBooleanExpressionLevel1Rule()); } 
	 EOF 
;

// Rule BooleanExpressionLevel1
ruleBooleanExpressionLevel1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionLevel1Access().getGroup()); }
		(rule__BooleanExpressionLevel1__Group__0)
		{ after(grammarAccess.getBooleanExpressionLevel1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpressionLevel2
entryRuleBooleanExpressionLevel2
:
{ before(grammarAccess.getBooleanExpressionLevel2Rule()); }
	 ruleBooleanExpressionLevel2
{ after(grammarAccess.getBooleanExpressionLevel2Rule()); } 
	 EOF 
;

// Rule BooleanExpressionLevel2
ruleBooleanExpressionLevel2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionLevel2Access().getAlternatives()); }
		(rule__BooleanExpressionLevel2__Alternatives)
		{ after(grammarAccess.getBooleanExpressionLevel2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotExpression
entryRuleNotExpression
:
{ before(grammarAccess.getNotExpressionRule()); }
	 ruleNotExpression
{ after(grammarAccess.getNotExpressionRule()); } 
	 EOF 
;

// Rule NotExpression
ruleNotExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotExpressionAccess().getGroup()); }
		(rule__NotExpression__Group__0)
		{ after(grammarAccess.getNotExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpressionLevel3
entryRuleBooleanExpressionLevel3
:
{ before(grammarAccess.getBooleanExpressionLevel3Rule()); }
	 ruleBooleanExpressionLevel3
{ after(grammarAccess.getBooleanExpressionLevel3Rule()); } 
	 EOF 
;

// Rule BooleanExpressionLevel3
ruleBooleanExpressionLevel3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionLevel3Access().getAlternatives()); }
		(rule__BooleanExpressionLevel3__Alternatives)
		{ after(grammarAccess.getBooleanExpressionLevel3Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression
:
{ before(grammarAccess.getComparisonExpressionRule()); }
	 ruleComparisonExpression
{ after(grammarAccess.getComparisonExpressionRule()); } 
	 EOF 
;

// Rule ComparisonExpression
ruleComparisonExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup()); }
		(rule__ComparisonExpression__Group__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpressionBracket
entryRuleBooleanExpressionBracket
:
{ before(grammarAccess.getBooleanExpressionBracketRule()); }
	 ruleBooleanExpressionBracket
{ after(grammarAccess.getBooleanExpressionBracketRule()); } 
	 EOF 
;

// Rule BooleanExpressionBracket
ruleBooleanExpressionBracket 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionBracketAccess().getGroup()); }
		(rule__BooleanExpressionBracket__Group__0)
		{ after(grammarAccess.getBooleanExpressionBracketAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpressionConstant
entryRuleBooleanExpressionConstant
:
{ before(grammarAccess.getBooleanExpressionConstantRule()); }
	 ruleBooleanExpressionConstant
{ after(grammarAccess.getBooleanExpressionConstantRule()); } 
	 EOF 
;

// Rule BooleanExpressionConstant
ruleBooleanExpressionConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionConstantAccess().getValueAssignment()); }
		(rule__BooleanExpressionConstant__ValueAssignment)
		{ after(grammarAccess.getBooleanExpressionConstantAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TimeUnit
ruleTimeUnit
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitAccess().getAlternatives()); }
		(rule__TimeUnit__Alternatives)
		{ after(grammarAccess.getTimeUnitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Balance
ruleBalance
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBalanceAccess().getBALANCEEnumLiteralDeclaration()); }
		('balance')
		{ after(grammarAccess.getBalanceAccess().getBALANCEEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BinaryBooleanOperator
ruleBinaryBooleanOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryBooleanOperatorAccess().getAlternatives()); }
		(rule__BinaryBooleanOperator__Alternatives)
		{ after(grammarAccess.getBinaryBooleanOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CompareOperator
ruleCompareOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
		(rule__CompareOperator__Alternatives)
		{ after(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Planning__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlanningAccess().getPersonsAssignment_3_0()); }
		(rule__Planning__PersonsAssignment_3_0)
		{ after(grammarAccess.getPlanningAccess().getPersonsAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlanningAccess().getTasksAssignment_3_1()); }
		(rule__Planning__TasksAssignment_3_1)
		{ after(grammarAccess.getPlanningAccess().getTasksAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getLunchActionParserRuleCall_0()); }
		ruleLunchAction
		{ after(grammarAccess.getActionAccess().getLunchActionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getMeetingActionParserRuleCall_1()); }
		ruleMeetingAction
		{ after(grammarAccess.getActionAccess().getMeetingActionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getPaperActionParserRuleCall_2()); }
		rulePaperAction
		{ after(grammarAccess.getActionAccess().getPaperActionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getPaymentActionParserRuleCall_3()); }
		rulePaymentAction
		{ after(grammarAccess.getActionAccess().getPaymentActionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getGroup_1_0()); }
		(rule__ExpressionLevel1__Group_1_0__0)
		{ after(grammarAccess.getExpressionLevel1Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel1Access().getGroup_1_1()); }
		(rule__ExpressionLevel1__Group_1_1__0)
		{ after(grammarAccess.getExpressionLevel1Access().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getGroup_1_0()); }
		(rule__ExpressionLevel2__Group_1_0__0)
		{ after(grammarAccess.getExpressionLevel2Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel2Access().getGroup_1_1()); }
		(rule__ExpressionLevel2__Group_1_1__0)
		{ after(grammarAccess.getExpressionLevel2Access().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel2Access().getGroup_1_2()); }
		(rule__ExpressionLevel2__Group_1_2__0)
		{ after(grammarAccess.getExpressionLevel2Access().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel2Access().getGroup_1_3()); }
		(rule__ExpressionLevel2__Group_1_3__0)
		{ after(grammarAccess.getExpressionLevel2Access().getGroup_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel2Access().getGroup_1_4()); }
		(rule__ExpressionLevel2__Group_1_4__0)
		{ after(grammarAccess.getExpressionLevel2Access().getGroup_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel4Access().getExpressionMinusParserRuleCall_0()); }
		ruleExpressionMinus
		{ after(grammarAccess.getExpressionLevel4Access().getExpressionMinusParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel4Access().getExpressionPlusParserRuleCall_1()); }
		ruleExpressionPlus
		{ after(grammarAccess.getExpressionLevel4Access().getExpressionPlusParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel4Access().getExpressionLevel5ParserRuleCall_2()); }
		ruleExpressionLevel5
		{ after(grammarAccess.getExpressionLevel4Access().getExpressionLevel5ParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getExpressionBracketParserRuleCall_0()); }
		ruleExpressionBracket
		{ after(grammarAccess.getExpressionLevel5Access().getExpressionBracketParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel5Access().getExpressionConstantIntParserRuleCall_1()); }
		ruleExpressionConstantInt
		{ after(grammarAccess.getExpressionLevel5Access().getExpressionConstantIntParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel5Access().getExpressionBalanceParserRuleCall_2()); }
		ruleExpressionBalance
		{ after(grammarAccess.getExpressionLevel5Access().getExpressionBalanceParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionLevel2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionLevel2Access().getNotExpressionParserRuleCall_0()); }
		ruleNotExpression
		{ after(grammarAccess.getBooleanExpressionLevel2Access().getNotExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpressionLevel2Access().getBooleanExpressionLevel3ParserRuleCall_1()); }
		ruleBooleanExpressionLevel3
		{ after(grammarAccess.getBooleanExpressionLevel2Access().getBooleanExpressionLevel3ParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionLevel3__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionLevel3Access().getComparisonExpressionParserRuleCall_0()); }
		(ruleComparisonExpression)
		{ after(grammarAccess.getBooleanExpressionLevel3Access().getComparisonExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpressionLevel3Access().getBooleanExpressionBracketParserRuleCall_1()); }
		ruleBooleanExpressionBracket
		{ after(grammarAccess.getBooleanExpressionLevel3Access().getBooleanExpressionBracketParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpressionLevel3Access().getBooleanExpressionConstantParserRuleCall_2()); }
		ruleBooleanExpressionConstant
		{ after(grammarAccess.getBooleanExpressionLevel3Access().getBooleanExpressionConstantParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitAccess().getMINUTEEnumLiteralDeclaration_0()); }
		('min')
		{ after(grammarAccess.getTimeUnitAccess().getMINUTEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getHOUREnumLiteralDeclaration_1()); }
		('hour')
		{ after(grammarAccess.getTimeUnitAccess().getHOUREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getDAYEnumLiteralDeclaration_2()); }
		('day')
		{ after(grammarAccess.getTimeUnitAccess().getDAYEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getWEEKEnumLiteralDeclaration_3()); }
		('week')
		{ after(grammarAccess.getTimeUnitAccess().getWEEKEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBooleanOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryBooleanOperatorAccess().getANDEnumLiteralDeclaration_0()); }
		('AND')
		{ after(grammarAccess.getBinaryBooleanOperatorAccess().getANDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryBooleanOperatorAccess().getOREnumLiteralDeclaration_1()); }
		('OR')
		{ after(grammarAccess.getBinaryBooleanOperatorAccess().getOREnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
		('==')
		{ after(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperatorAccess().getNEQEnumLiteralDeclaration_1()); }
		('!=')
		{ after(grammarAccess.getCompareOperatorAccess().getNEQEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_2()); }
		('>=')
		{ after(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperatorAccess().getGEnumLiteralDeclaration_3()); }
		('>')
		{ after(grammarAccess.getCompareOperatorAccess().getGEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_4()); }
		('<=')
		{ after(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperatorAccess().getLEnumLiteralDeclaration_5()); }
		('<')
		{ after(grammarAccess.getCompareOperatorAccess().getLEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Planning__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Planning__Group__0__Impl
	rule__Planning__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Planning__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlanningAccess().getPlanningKeyword_0()); }
	'Planning'
	{ after(grammarAccess.getPlanningAccess().getPlanningKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Planning__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Planning__Group__1__Impl
	rule__Planning__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Planning__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlanningAccess().getNameAssignment_1()); }
	(rule__Planning__NameAssignment_1)
	{ after(grammarAccess.getPlanningAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Planning__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Planning__Group__2__Impl
	rule__Planning__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Planning__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlanningAccess().getAnonymousAssignment_2()); }
	(rule__Planning__AnonymousAssignment_2)?
	{ after(grammarAccess.getPlanningAccess().getAnonymousAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Planning__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Planning__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Planning__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlanningAccess().getAlternatives_3()); }
	(rule__Planning__Alternatives_3)*
	{ after(grammarAccess.getPlanningAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Person__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Person__Group__0__Impl
	rule__Person__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonAccess().getPersonKeyword_0()); }
	'Person:'
	{ after(grammarAccess.getPersonAccess().getPersonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Person__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonAccess().getNameAssignment_1()); }
	(rule__Person__NameAssignment_1)
	{ after(grammarAccess.getPersonAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
	'Task:'
	{ after(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getNameAssignment_1()); }
	(rule__Task__NameAssignment_1)
	{ after(grammarAccess.getTaskAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getActionAssignment_2()); }
	(rule__Task__ActionAssignment_2)
	{ after(grammarAccess.getTaskAccess().getActionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getPersonsKeyword_3()); }
	'persons:'
	{ after(grammarAccess.getTaskAccess().getPersonsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__4__Impl
	rule__Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTaskAccess().getPersonsAssignment_4()); }
		(rule__Task__PersonsAssignment_4)
		{ after(grammarAccess.getTaskAccess().getPersonsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getTaskAccess().getPersonsAssignment_4()); }
		(rule__Task__PersonsAssignment_4)*
		{ after(grammarAccess.getTaskAccess().getPersonsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__5__Impl
	rule__Task__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getPriorityKeyword_5()); }
	'priority:'
	{ after(grammarAccess.getTaskAccess().getPriorityKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__6__Impl
	rule__Task__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getPrioAssignment_6()); }
	(rule__Task__PrioAssignment_6)
	{ after(grammarAccess.getTaskAccess().getPrioAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__7__Impl
	rule__Task__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_7()); }
	(rule__Task__Group_7__0)?
	{ after(grammarAccess.getTaskAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__8__Impl
	rule__Task__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDefineProjectsKeyword_8()); }
	'defineProjects:'
	{ after(grammarAccess.getTaskAccess().getDefineProjectsKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__9__Impl
	rule__Task__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getProjectsAssignment_9()); }
	(rule__Task__ProjectsAssignment_9)*
	{ after(grammarAccess.getTaskAccess().getProjectsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__10__Impl
	rule__Task__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getUseProjectsKeyword_10()); }
	'useProjects:'
	{ after(grammarAccess.getTaskAccess().getUseProjectsKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__11__Impl
	rule__Task__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getUseAssignment_11()); }
	(rule__Task__UseAssignment_11)*
	{ after(grammarAccess.getTaskAccess().getUseAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_12()); }
	(rule__Task__Group_12__0)?
	{ after(grammarAccess.getTaskAccess().getGroup_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_7__0__Impl
	rule__Task__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDurationKeyword_7_0()); }
	'duration:'
	{ after(grammarAccess.getTaskAccess().getDurationKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDurationAssignment_7_1()); }
	(rule__Task__DurationAssignment_7_1)
	{ after(grammarAccess.getTaskAccess().getDurationAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_12__0__Impl
	rule__Task__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getExtendsKeyword_12_0()); }
	'extends'
	{ after(grammarAccess.getTaskAccess().getExtendsKeyword_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getExtendsAssignment_12_1()); }
	(rule__Task__ExtendsAssignment_12_1)
	{ after(grammarAccess.getTaskAccess().getExtendsAssignment_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Duration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__0__Impl
	rule__Duration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getDlAssignment_0()); }
	(rule__Duration__DlAssignment_0)
	{ after(grammarAccess.getDurationAccess().getDlAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getUnitAssignment_1()); }
	(rule__Duration__UnitAssignment_1)
	{ after(grammarAccess.getDurationAccess().getUnitAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LunchAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LunchAction__Group__0__Impl
	rule__LunchAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LunchAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLunchActionAccess().getLunchKeyword_0()); }
	'Lunch'
	{ after(grammarAccess.getLunchActionAccess().getLunchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LunchAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LunchAction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LunchAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLunchActionAccess().getLocationAssignment_1()); }
	(rule__LunchAction__LocationAssignment_1)
	{ after(grammarAccess.getLunchActionAccess().getLocationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MeetingAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MeetingAction__Group__0__Impl
	rule__MeetingAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MeetingAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeetingActionAccess().getMeetingKeyword_0()); }
	'Meeting'
	{ after(grammarAccess.getMeetingActionAccess().getMeetingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MeetingAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MeetingAction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MeetingAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeetingActionAccess().getTopicAssignment_1()); }
	(rule__MeetingAction__TopicAssignment_1)
	{ after(grammarAccess.getMeetingActionAccess().getTopicAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PaperAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaperAction__Group__0__Impl
	rule__PaperAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PaperAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaperActionAccess().getReportKeyword_0()); }
	'Report'
	{ after(grammarAccess.getPaperActionAccess().getReportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaperAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaperAction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PaperAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaperActionAccess().getReportAssignment_1()); }
	(rule__PaperAction__ReportAssignment_1)
	{ after(grammarAccess.getPaperActionAccess().getReportAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PaymentAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaymentAction__Group__0__Impl
	rule__PaymentAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaymentActionAccess().getGroup_0()); }
	(rule__PaymentAction__Group_0__0)?
	{ after(grammarAccess.getPaymentActionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaymentAction__Group__1__Impl
	rule__PaymentAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaymentActionAccess().getPayKeyword_1()); }
	'Pay'
	{ after(grammarAccess.getPaymentActionAccess().getPayKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaymentAction__Group__2__Impl
	rule__PaymentAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaymentActionAccess().getAmountAssignment_2()); }
	(rule__PaymentAction__AmountAssignment_2)
	{ after(grammarAccess.getPaymentActionAccess().getAmountAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaymentAction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaymentActionAccess().getEuroKeyword_3()); }
	'euro'
	{ after(grammarAccess.getPaymentActionAccess().getEuroKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PaymentAction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaymentAction__Group_0__0__Impl
	rule__PaymentAction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentAction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaymentActionAccess().getIfKeyword_0_0()); }
	'If'
	{ after(grammarAccess.getPaymentActionAccess().getIfKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentAction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PaymentAction__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentAction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaymentActionAccess().getConditionAssignment_0_1()); }
	(rule__PaymentAction__ConditionAssignment_0_1)
	{ after(grammarAccess.getPaymentActionAccess().getConditionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group__0__Impl
	rule__ExpressionLevel1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getExpressionLevel2ParserRuleCall_0()); }
	ruleExpressionLevel2
	{ after(grammarAccess.getExpressionLevel1Access().getExpressionLevel2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getAlternatives_1()); }
	(rule__ExpressionLevel1__Alternatives_1)*
	{ after(grammarAccess.getExpressionLevel1Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel1__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_0__0__Impl
	rule__ExpressionLevel1__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getExpressionAdditionLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLevel1Access().getExpressionAdditionLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_0__1__Impl
	rule__ExpressionLevel1__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getPlusSignKeyword_1_0_1()); }
	'+'
	{ after(grammarAccess.getExpressionLevel1Access().getPlusSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLevel1__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel1__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_1__0__Impl
	rule__ExpressionLevel1__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getExpressionSubtractionLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel1Access().getExpressionSubtractionLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_1__1__Impl
	rule__ExpressionLevel1__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getHyphenMinusKeyword_1_1_1()); }
	'-'
	{ after(grammarAccess.getExpressionLevel1Access().getHyphenMinusKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLevel1__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group__0__Impl
	rule__ExpressionLevel2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExpressionLevel3ParserRuleCall_0()); }
	ruleExpressionLevel3
	{ after(grammarAccess.getExpressionLevel2Access().getExpressionLevel3ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getAlternatives_1()); }
	(rule__ExpressionLevel2__Alternatives_1)*
	{ after(grammarAccess.getExpressionLevel2Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel2__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_0__0__Impl
	rule__ExpressionLevel2__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExpressionMultiplyLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLevel2Access().getExpressionMultiplyLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_0__1__Impl
	rule__ExpressionLevel2__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getAsteriskKeyword_1_0_1()); }
	'*'
	{ after(grammarAccess.getExpressionLevel2Access().getAsteriskKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLevel2__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel2__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_1__0__Impl
	rule__ExpressionLevel2__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExpressionDivisionLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel2Access().getExpressionDivisionLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_1__1__Impl
	rule__ExpressionLevel2__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getSolidusKeyword_1_1_1()); }
	'/'
	{ after(grammarAccess.getExpressionLevel2Access().getSolidusKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLevel2__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel2__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_2__0__Impl
	rule__ExpressionLevel2__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExpressionMaximumLeftAction_1_2_0()); }
	()
	{ after(grammarAccess.getExpressionLevel2Access().getExpressionMaximumLeftAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_2__1__Impl
	rule__ExpressionLevel2__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getMaxKeyword_1_2_1()); }
	'max'
	{ after(grammarAccess.getExpressionLevel2Access().getMaxKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_2_2()); }
	(rule__ExpressionLevel2__RightAssignment_1_2_2)
	{ after(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel2__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_3__0__Impl
	rule__ExpressionLevel2__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExpressionMinimumLeftAction_1_3_0()); }
	()
	{ after(grammarAccess.getExpressionLevel2Access().getExpressionMinimumLeftAction_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_3__1__Impl
	rule__ExpressionLevel2__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getMinKeyword_1_3_1()); }
	'min'
	{ after(grammarAccess.getExpressionLevel2Access().getMinKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_3_2()); }
	(rule__ExpressionLevel2__RightAssignment_1_3_2)
	{ after(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel2__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_4__0__Impl
	rule__ExpressionLevel2__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExpressionModuloLeftAction_1_4_0()); }
	()
	{ after(grammarAccess.getExpressionLevel2Access().getExpressionModuloLeftAction_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_4__1__Impl
	rule__ExpressionLevel2__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getModKeyword_1_4_1()); }
	'mod'
	{ after(grammarAccess.getExpressionLevel2Access().getModKeyword_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_4_2()); }
	(rule__ExpressionLevel2__RightAssignment_1_4_2)
	{ after(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel3__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group__0__Impl
	rule__ExpressionLevel3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getExpressionLevel4ParserRuleCall_0()); }
	ruleExpressionLevel4
	{ after(grammarAccess.getExpressionLevel3Access().getExpressionLevel4ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getGroup_1()); }
	(rule__ExpressionLevel3__Group_1__0)?
	{ after(grammarAccess.getExpressionLevel3Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel3__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1__0__Impl
	rule__ExpressionLevel3__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getExpressionPowerLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel3Access().getExpressionPowerLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1__1__Impl
	rule__ExpressionLevel3__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getCircumflexAccentKeyword_1_1()); }
	'^'
	{ after(grammarAccess.getExpressionLevel3Access().getCircumflexAccentKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_2()); }
	(rule__ExpressionLevel3__RightAssignment_1_2)
	{ after(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionMinus__Group__0__Impl
	rule__ExpressionMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionMinusAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getExpressionMinusAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionMinusAccess().getSubAssignment_1()); }
	(rule__ExpressionMinus__SubAssignment_1)
	{ after(grammarAccess.getExpressionMinusAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionPlus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionPlus__Group__0__Impl
	rule__ExpressionPlus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPlus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionPlusAccess().getPlusSignKeyword_0()); }
	'+'
	{ after(grammarAccess.getExpressionPlusAccess().getPlusSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPlus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionPlus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPlus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionPlusAccess().getSubAssignment_1()); }
	(rule__ExpressionPlus__SubAssignment_1)
	{ after(grammarAccess.getExpressionPlusAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionBracket__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBracket__Group__0__Impl
	rule__ExpressionBracket__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBracketAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExpressionBracketAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBracket__Group__1__Impl
	rule__ExpressionBracket__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBracketAccess().getSubAssignment_1()); }
	(rule__ExpressionBracket__SubAssignment_1)
	{ after(grammarAccess.getExpressionBracketAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBracket__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBracketAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getExpressionBracketAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpressionLevel1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionLevel1__Group__0__Impl
	rule__BooleanExpressionLevel1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionLevel1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionLevel1Access().getBooleanExpressionLevel2ParserRuleCall_0()); }
	ruleBooleanExpressionLevel2
	{ after(grammarAccess.getBooleanExpressionLevel1Access().getBooleanExpressionLevel2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionLevel1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionLevel1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionLevel1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionLevel1Access().getGroup_1()); }
	(rule__BooleanExpressionLevel1__Group_1__0)*
	{ after(grammarAccess.getBooleanExpressionLevel1Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpressionLevel1__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionLevel1__Group_1__0__Impl
	rule__BooleanExpressionLevel1__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionLevel1__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionLevel1Access().getExpressionBinOpLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBooleanExpressionLevel1Access().getExpressionBinOpLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionLevel1__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionLevel1__Group_1__1__Impl
	rule__BooleanExpressionLevel1__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionLevel1__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionLevel1Access().getBopAssignment_1_1()); }
	(rule__BooleanExpressionLevel1__BopAssignment_1_1)
	{ after(grammarAccess.getBooleanExpressionLevel1Access().getBopAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionLevel1__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionLevel1__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionLevel1__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionLevel1Access().getRightAssignment_1_2()); }
	(rule__BooleanExpressionLevel1__RightAssignment_1_2)
	{ after(grammarAccess.getBooleanExpressionLevel1Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotExpression__Group__0__Impl
	rule__NotExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotExpressionAccess().getNOTKeyword_0()); }
	'NOT'
	{ after(grammarAccess.getNotExpressionAccess().getNOTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotExpressionAccess().getSubAssignment_1()); }
	(rule__NotExpression__SubAssignment_1)
	{ after(grammarAccess.getNotExpressionAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__0__Impl
	rule__ComparisonExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getExpressionCompOpAction_0()); }
	()
	{ after(grammarAccess.getComparisonExpressionAccess().getExpressionCompOpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__1__Impl
	rule__ComparisonExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getLeftAssignment_1()); }
	(rule__ComparisonExpression__LeftAssignment_1)
	{ after(grammarAccess.getComparisonExpressionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__2__Impl
	rule__ComparisonExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getOpAssignment_2()); }
	(rule__ComparisonExpression__OpAssignment_2)
	{ after(grammarAccess.getComparisonExpressionAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRightAssignment_3()); }
	(rule__ComparisonExpression__RightAssignment_3)
	{ after(grammarAccess.getComparisonExpressionAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpressionBracket__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionBracket__Group__0__Impl
	rule__BooleanExpressionBracket__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionBracket__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionBracketAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getBooleanExpressionBracketAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionBracket__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionBracket__Group__1__Impl
	rule__BooleanExpressionBracket__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionBracket__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionBracketAccess().getSubAssignment_1()); }
	(rule__BooleanExpressionBracket__SubAssignment_1)
	{ after(grammarAccess.getBooleanExpressionBracketAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionBracket__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionBracket__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionBracket__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionBracketAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getBooleanExpressionBracketAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Planning__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlanningAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPlanningAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Planning__AnonymousAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlanningAccess().getAnonymousAnonymousKeyword_2_0()); }
		(
			{ before(grammarAccess.getPlanningAccess().getAnonymousAnonymousKeyword_2_0()); }
			'anonymous'
			{ after(grammarAccess.getPlanningAccess().getAnonymousAnonymousKeyword_2_0()); }
		)
		{ after(grammarAccess.getPlanningAccess().getAnonymousAnonymousKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Planning__PersonsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlanningAccess().getPersonsPersonParserRuleCall_3_0_0()); }
		rulePerson
		{ after(grammarAccess.getPlanningAccess().getPersonsPersonParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Planning__TasksAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlanningAccess().getTasksTaskParserRuleCall_3_1_0()); }
		ruleTask
		{ after(grammarAccess.getPlanningAccess().getTasksTaskParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPersonAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPersonAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__ActionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getActionActionParserRuleCall_2_0()); }
		ruleAction
		{ after(grammarAccess.getTaskAccess().getActionActionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__PersonsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getPersonsPersonCrossReference_4_0()); }
		(
			{ before(grammarAccess.getTaskAccess().getPersonsPersonIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTaskAccess().getPersonsPersonIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getTaskAccess().getPersonsPersonCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__PrioAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getPrioINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getTaskAccess().getPrioINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__DurationAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getDurationDurationParserRuleCall_7_1_0()); }
		ruleDuration
		{ after(grammarAccess.getTaskAccess().getDurationDurationParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__ProjectsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getProjectsProjectParserRuleCall_9_0()); }
		ruleProject
		{ after(grammarAccess.getTaskAccess().getProjectsProjectParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__UseAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getUseProjectUseParserRuleCall_11_0()); }
		ruleProjectUse
		{ after(grammarAccess.getTaskAccess().getUseProjectUseParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__ExtendsAssignment_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getExtendsTaskCrossReference_12_1_0()); }
		(
			{ before(grammarAccess.getTaskAccess().getExtendsTaskIDTerminalRuleCall_12_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTaskAccess().getExtendsTaskIDTerminalRuleCall_12_1_0_1()); }
		)
		{ after(grammarAccess.getTaskAccess().getExtendsTaskCrossReference_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getProjectAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectUse__ProjectAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectUseAccess().getProjectProjectCrossReference_0()); }
		(
			{ before(grammarAccess.getProjectUseAccess().getProjectProjectIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProjectUseAccess().getProjectProjectIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getProjectUseAccess().getProjectProjectCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__DlAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getDlINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getDurationAccess().getDlINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__UnitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getUnitTimeUnitEnumRuleCall_1_0()); }
		ruleTimeUnit
		{ after(grammarAccess.getDurationAccess().getUnitTimeUnitEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LunchAction__LocationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLunchActionAccess().getLocationIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLunchActionAccess().getLocationIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MeetingAction__TopicAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeetingActionAccess().getTopicSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMeetingActionAccess().getTopicSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaperAction__ReportAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPaperActionAccess().getReportIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPaperActionAccess().getReportIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentAction__ConditionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPaymentActionAccess().getConditionBooleanExpressionParserRuleCall_0_1_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getPaymentActionAccess().getConditionBooleanExpressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PaymentAction__AmountAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPaymentActionAccess().getAmountIntExpressionParserRuleCall_2_0()); }
		ruleIntExpression
		{ after(grammarAccess.getPaymentActionAccess().getAmountIntExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_0_2_0()); }
		ruleExpressionLevel2
		{ after(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_1_2_0()); }
		ruleExpressionLevel2
		{ after(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_0_2_0()); }
		ruleExpressionLevel3
		{ after(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_1_2_0()); }
		ruleExpressionLevel3
		{ after(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__RightAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_2_2_0()); }
		ruleExpressionLevel3
		{ after(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__RightAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_3_2_0()); }
		ruleExpressionLevel3
		{ after(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__RightAssignment_1_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_4_2_0()); }
		ruleExpressionLevel3
		{ after(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel3ParserRuleCall_1_2_0()); }
		ruleExpressionLevel3
		{ after(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel3ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMinus__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionMinusAccess().getSubExpressionLevel5ParserRuleCall_1_0()); }
		ruleExpressionLevel5
		{ after(grammarAccess.getExpressionMinusAccess().getSubExpressionLevel5ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPlus__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionPlusAccess().getSubExpressionLevel5ParserRuleCall_1_0()); }
		ruleExpressionLevel5
		{ after(grammarAccess.getExpressionPlusAccess().getSubExpressionLevel5ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionBracketAccess().getSubIntExpressionParserRuleCall_1_0()); }
		ruleIntExpression
		{ after(grammarAccess.getExpressionBracketAccess().getSubIntExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionConstantInt__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionConstantIntAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getExpressionConstantIntAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBalance__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionBalanceAccess().getValueBalanceEnumRuleCall_0()); }
		ruleBalance
		{ after(grammarAccess.getExpressionBalanceAccess().getValueBalanceEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionLevel1__BopAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionLevel1Access().getBopBinaryBooleanOperatorEnumRuleCall_1_1_0()); }
		ruleBinaryBooleanOperator
		{ after(grammarAccess.getBooleanExpressionLevel1Access().getBopBinaryBooleanOperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionLevel1__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionLevel1Access().getRightBooleanExpressionLevel2ParserRuleCall_1_2_0()); }
		ruleBooleanExpressionLevel2
		{ after(grammarAccess.getBooleanExpressionLevel1Access().getRightBooleanExpressionLevel2ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotExpressionAccess().getSubBooleanExpressionLevel3ParserRuleCall_1_0()); }
		ruleBooleanExpressionLevel3
		{ after(grammarAccess.getNotExpressionAccess().getSubBooleanExpressionLevel3ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getLeftIntExpressionParserRuleCall_1_0()); }
		ruleIntExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getLeftIntExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_2_0()); }
		ruleCompareOperator
		{ after(grammarAccess.getComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRightIntExpressionParserRuleCall_3_0()); }
		ruleIntExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getRightIntExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionBracket__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionBracketAccess().getSubBooleanExpressionParserRuleCall_1_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getBooleanExpressionBracketAccess().getSubBooleanExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionConstant__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionConstantAccess().getValueBOOL_LITERALTerminalRuleCall_0()); }
		RULE_BOOL_LITERAL
		{ after(grammarAccess.getBooleanExpressionConstantAccess().getValueBOOL_LITERALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOL_LITERAL : ('true'|'false'|'TRUE'|'FALSE');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
